<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
		<!-- 实际开发中使用组件扫描
			扫描com.mpf.ssm包下的controller接口
		 -->
		<context:component-scan base-package="com.mpf.controller"></context:component-scan>
		<!-- 静态资源解析
			包括：js,css,img...
		 -->
		<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
		<mvc:resources location="/img/" mapping="/img/**"></mvc:resources>

		 <!-- mvc的注解驱动  代替上面的注解处理器映射器和注解的处理器适配器  加载很多参数绑定方法，比如json转换解析器，实际开发使用注解驱动-->
		 <mvc:annotation-driven conversion-service="conversionService1"	validator="validator"></mvc:annotation-driven>
		 
		 <!-- 配置视图解析器 
		 解析jsp，jstl
		 -->
		 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		 	<!-- jsp前缀 -->
		 	<property name="prefix" value="/WEB-INF/jsp"></property>
		 	<!-- jsp后缀 -->
		 	<property name="suffix" value=".jsp"></property>
		 </bean>
		 
		 <!-- 自定义参数绑定 -->
		 <bean id="conversionService1" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		 	<property name="converters">
		 		<list>
		 			<bean class="com.mpf.utils.CustomDateConvert"></bean>
		 		</list>
		 	</property>
		 </bean>
		 
		  <!-- 校验器 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
		<!-- 指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>
	<!-- <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
       校验器
       <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
       指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties

       <property name="validationMessageSource" ref="messageSource"/>
    	</bean> -->
    	
<!-- 校验错误信息配置文件 -->
    <bean id="messageSource"
      class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
       <!-- 资源文件名-->
       <property name="basenames">  
        <list>   
            <value>classpath:CustomValidationMessages</value>
        </list>  
        </property>
       <!-- 资源文件编码格式 -->
       <property name="fileEncodings" value="utf-8" />
       <!-- 对资源文件内容缓存时间，单位秒 -->
       <property name="cacheSeconds" value="120" />
    </bean>

	<!-- 全局异常处理器 -->
   	<bean class="com.mpf.exception.CustomExceptionResolver"/>
   	
   	<!-- multipart解析器 -->
   	<bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
       <!-- 设置上传文件的最大尺寸为5MB -->
       <property name="maxUploadSize">
           <value>5242880</value>
       </property>
    </bean>
   	
   	 <!--拦截器 -->

	<mvc:interceptors>
	   <!--  多个拦截器,顺序执行 -->
	    <mvc:interceptor>
	       <mvc:mapping path="/**"/>
	       <bean class="com.mpf.interceptor.HandlerInterceptor1"></bean>
	    </mvc:interceptor>
	    <mvc:interceptor>
	       <mvc:mapping path="/**"/>
	       <bean class="com.mpf.interceptor.HandlerInterceptor2"></bean>
	    </mvc:interceptor>
	    <mvc:interceptor>
	       <mvc:mapping path="/**"/>
	       <bean class="com.mpf.interceptor.LoginInterceptor"></bean>
	    </mvc:interceptor>
	</mvc:interceptors>
</beans>