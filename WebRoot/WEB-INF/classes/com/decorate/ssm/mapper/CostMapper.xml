<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.decorate.ssm.mapper.CostMapper" >
  <resultMap id="BaseResultMap" type="com.decorate.ssm.po.Cost" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="costType_Id" property="costtypeId" jdbcType="INTEGER" />
    <result column="costName" property="costname" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="project_Id" property="projectId" jdbcType="INTEGER" />
    <result column="emp_Id" property="empId" jdbcType="INTEGER" />
    <result column="author_Id" property="authorId" jdbcType="INTEGER" />
    <result column="company_Id" property="companyId" jdbcType="INTEGER" />
    <result column="createDT" property="createdt" jdbcType="TIMESTAMP" />
    <result column="pay" property="pay" jdbcType="INTEGER" />
    <result column="costDay" property="costday" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, costType_Id, costName, money, memo, project_Id, emp_Id, author_Id, company_Id, 
    createDT, pay, costDay
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.decorate.ssm.po.CostExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cost
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cost
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.decorate.ssm.po.CostExample" >
    delete from cost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.decorate.ssm.po.Cost" >
    insert into cost (Id, costType_Id, costName, 
      money, memo, project_Id, 
      emp_Id, author_Id, company_Id, 
      createDT, pay, costDay
      )
    values (#{id,jdbcType=INTEGER}, #{costtypeId,jdbcType=INTEGER}, #{costname,jdbcType=VARCHAR}, 
      #{money,jdbcType=DECIMAL}, #{memo,jdbcType=VARCHAR}, #{projectId,jdbcType=INTEGER}, 
      #{empId,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, 
      #{createdt,jdbcType=TIMESTAMP}, #{pay,jdbcType=INTEGER}, #{costday,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.decorate.ssm.po.Cost" >
    insert into cost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="costtypeId != null" >
        costType_Id,
      </if>
      <if test="costname != null" >
        costName,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="projectId != null" >
        project_Id,
      </if>
      <if test="empId != null" >
        emp_Id,
      </if>
      <if test="authorId != null" >
        author_Id,
      </if>
      <if test="companyId != null" >
        company_Id,
      </if>
      <if test="createdt != null" >
        createDT,
      </if>
      <if test="pay != null" >
        pay,
      </if>
      <if test="costday != null" >
        costDay,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="costtypeId != null" >
        #{costtypeId,jdbcType=INTEGER},
      </if>
      <if test="costname != null" >
        #{costname,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="authorId != null" >
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="createdt != null" >
        #{createdt,jdbcType=TIMESTAMP},
      </if>
      <if test="pay != null" >
        #{pay,jdbcType=INTEGER},
      </if>
      <if test="costday != null" >
        #{costday,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.decorate.ssm.po.CostExample" resultType="java.lang.Integer" >
    select count(*) from cost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cost
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.costtypeId != null" >
        costType_Id = #{record.costtypeId,jdbcType=INTEGER},
      </if>
      <if test="record.costname != null" >
        costName = #{record.costname,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null" >
        project_Id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null" >
        emp_Id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.authorId != null" >
        author_Id = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null" >
        company_Id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.createdt != null" >
        createDT = #{record.createdt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pay != null" >
        pay = #{record.pay,jdbcType=INTEGER},
      </if>
      <if test="record.costday != null" >
        costDay = #{record.costday,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cost
    set Id = #{record.id,jdbcType=INTEGER},
      costType_Id = #{record.costtypeId,jdbcType=INTEGER},
      costName = #{record.costname,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      memo = #{record.memo,jdbcType=VARCHAR},
      project_Id = #{record.projectId,jdbcType=INTEGER},
      emp_Id = #{record.empId,jdbcType=INTEGER},
      author_Id = #{record.authorId,jdbcType=INTEGER},
      company_Id = #{record.companyId,jdbcType=INTEGER},
      createDT = #{record.createdt,jdbcType=TIMESTAMP},
      pay = #{record.pay,jdbcType=INTEGER},
      costDay = #{record.costday,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.decorate.ssm.po.Cost" >
    update cost
    <set >
      <if test="costtypeId != null" >
        costType_Id = #{costtypeId,jdbcType=INTEGER},
      </if>
      <if test="costname != null" >
        costName = #{costname,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        project_Id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="empId != null" >
        emp_Id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="authorId != null" >
        author_Id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        company_Id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="createdt != null" >
        createDT = #{createdt,jdbcType=TIMESTAMP},
      </if>
      <if test="pay != null" >
        pay = #{pay,jdbcType=INTEGER},
      </if>
      <if test="costday != null" >
        costDay = #{costday,jdbcType=TIMESTAMP},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.decorate.ssm.po.Cost" >
    update cost
    set costType_Id = #{costtypeId,jdbcType=INTEGER},
      costName = #{costname,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      memo = #{memo,jdbcType=VARCHAR},
      project_Id = #{projectId,jdbcType=INTEGER},
      emp_Id = #{empId,jdbcType=INTEGER},
      author_Id = #{authorId,jdbcType=INTEGER},
      company_Id = #{companyId,jdbcType=INTEGER},
      createDT = #{createdt,jdbcType=TIMESTAMP},
      pay = #{pay,jdbcType=INTEGER},
      costDay = #{costday,jdbcType=TIMESTAMP}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>